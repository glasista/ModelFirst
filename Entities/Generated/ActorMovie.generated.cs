//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v1.3.0.12
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace MyEntityClasses.Entities
{
   public partial class ActorMovie
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected ActorMovie()
      {
         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="actorid"></param>
      /// <param name="movieid"></param>
      /// <param name="_actors0"></param>
      /// <param name="_movies1"></param>
      public ActorMovie(int actorid, int movieid, global::MyEntityClasses.Entities.Actors _actors0, global::MyEntityClasses.Entities.Movies _movies1)
      {
         this.ActorId = actorid;

         this.MovieId = movieid;

         if (_actors0 == null) throw new ArgumentNullException(nameof(_actors0));
         _actors0.ActorMovies.Add(this);

         if (_movies1 == null) throw new ArgumentNullException(nameof(_movies1));
         _movies1.ActorMovies.Add(this);


         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="actorid"></param>
      /// <param name="movieid"></param>
      /// <param name="_actors0"></param>
      /// <param name="_movies1"></param>
      public static ActorMovie Create(int actorid, int movieid, global::MyEntityClasses.Entities.Actors _actors0, global::MyEntityClasses.Entities.Movies _movies1)
      {
         return new ActorMovie(actorid, movieid, _actors0, _movies1);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// </summary>
      [Key]
      [Required]
      public int Id { get; protected set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public int ActorId { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public int MovieId { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

   }
}

